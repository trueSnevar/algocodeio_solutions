"""
Сложение длинных чисел

средне
решено

Не всегда достаточно типа int или даже int64 для сложения чисел.
Порой числа настолько большие, что просто не помещаются в базовые типы.

Даны массивы nums1 и nums2, где каждый массив представляет собой длинное число.
Необходимо самому написать логику сложения. Учитывай, что nums1 и nums2 могут быть очень длинными.

Пример 1:

Ввод: nums1 = [1,2,3], nums2 = [4,5,6]
Вывод: [5,7,9]
Объяснение: 123 + 456 = 579

Пример 2:

Ввод: nums1 = [9,9,9], nums2 = [9]
Вывод: [1,0,0,8]
Объяснение: 999 + 9 = 1008

Ограничения:

len(nums1) >= 1
len(nums2) >= 1
0 <= nums1[i] <= 9
0 <= nums2[i] <= 9

"""

from typing import *


def calculate(nums1: List[int], nums2: List[int]) -> List[int]:
    result = []
    # carry - число, которое переносим в следующий разряд
    carry = 0

    # складываем числа с конца, поэтому указатели ставим на конец
    # и двигаем в начало строки
    p1 = len(nums1) - 1
    p2 = len(nums2) - 1
    while p1 >= 0 or p2 >= 0 or carry > 0:
        # если выходим за границу массива, то текущее число
        # для сложения это 0, иначе достаем значение из массива
        num1, num2 = 0, 0
        if p1 >= 0:
            num1 = nums1[p1]
        if p2 >= 0:
            num2 = nums2[p2]

        # вычисляем сумму двух чисел и carry
        overall_sum = num1 + num2 + carry
        # если overall_sum = 17, то carry = 1,
        # a 7 должна быть записана в текущий разряд ответа
        carry = overall_sum // 10
        result.append(overall_sum % 10)

        # сдвигаем указатели к следующему разряду
        p1 -= 1
        p2 -= 1
    # результат получился в обратном порядке, поэтому нужно развернуть
    return list(reversed(result))

if __name__ == "__main__":
    ex1 = [1,2,3]
    ex2 = [4,5,6]

    ex3 = [9,9,9]
    ex4 = [9]

    ans1 = calculate(ex1, ex2)
    ans2 = calculate(ex3, ex4)
    print(ans1)
    print(ans2)

"""
Оценка сложности

Время: O(n), где n - длина массива nums
Память: O(1)
"""