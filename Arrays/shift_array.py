"""
Сдвиг вправо

средне
решено

Дан массив целых чисел nums и число k.
Нужно k раз передвинуть последний элемент массива на первое место, сохраняя порядок остальных элементов.

Другими словами, операция сдвига эквивалентна удалению последнего элемента, а затем вставке его в начало массива.

Пример 1:

Ввод: nums = [1,2,3,4,5], k = 3
Вывод: [3,4,5,1,2]
Объяснение:
- сдвиг 1: [5,1,2,3,4]
- сдвиг 2: [4,5,1,2,3]
- сдвиг 3: [3,4,5,1,2]

Пример 2:

Ввод: nums = [100,-2,7,13], k = 0
Вывод: [100,-2,7,13]

Пример 3:

Ввод: nums = [1,2,3], k = 40
Вывод: [3,1,2]
Ограничения:

len(nums) >= 1

"""

from typing import *


def shift(nums: List[int], k: int) -> List[int]:
    n = len(nums)
    k = k % n

    def helper(arr, start, end):
        while start < end:
            arr[start], arr[end] = arr[end], arr[start]
            start += 1
            end -= 1

    helper(nums, 0, n - 1)
    helper(nums, 0, k - 1)
    helper(nums, k, n - 1)
    return nums

if __name__ == "__main__":
    ex1 = [1,2,3,4,5]
    k1 = 3

    ex2 = [100,-2,7,13]
    k2 = 0

    ex3 = [1,2,3]
    k3 = 40

    ans1 = shift(ex1, k1)
    ans2 = shift(ex2, k2)
    ans3 = shift(ex3, k3)
    print(ans1)
    print(ans2)
    print(ans3)

"""
Оценка сложности

Время: O(n), где n - длина массива nums
Память: O(1)
"""