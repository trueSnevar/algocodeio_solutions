"""
Индекс равных сумм

средне
решено

Дан массив целых чисел nums.
Нужно найти индекс элемента, такой что суммы всех элементов справа и слева от этого элемента равны.

Если индекс указывает на самый первый элемент массива,
то считаем сумму всех элементов слева равной нулю.

Это правило также применимо к последнему индексу.

Если в массиве нет такого индекса, то нужно вернуть -1.

Пример 1:

Ввод: nums = [7,3,4,5,5]
Вывод: 2
Объяснение: 7+3 = 5+5

Пример 2:

Ввод: nums = [3,5,-5]
Вывод: 0
Объяснение: 0 = 5+(-5)

Пример 3:

Ввод: nums = [1,2,4,8]
Вывод: -1

Ограничения:

len(nums) >= 1
"""

from typing import *

def pivot_index(nums: List[int]) -> int:
    # сумма всех элементов массива nums
    nums_sum = sum(nums)

    # текущая сумма всех элементов слева
    left_sum = 0
    for i, num in enumerate(nums):
        # rightSum - сумма элементов справа
        # 0 1 2 3 4 5
        #     i
        # если i = 2, то leftSum = 0 + 1
        # rightSum = 3 + 4 + 5
        right_sum = nums_sum - left_sum - num
        if left_sum == right_sum:
            return i
        left_sum += num
    return -1


if __name__ == "__main__":
    ex1 = [7,3,4,5,5]
    ex2 = [3,5,-5]
    ex3 = [1,2,4,8]

    ans1 = pivot_index(ex1)
    ans2 = pivot_index(ex2)
    ans3 = pivot_index(ex3)
    print(ans1)
    print(ans2)
    print(ans3)

"""
Оценка сложности

Время: O(n), где n - длина массива nums
Память: O(1)
"""