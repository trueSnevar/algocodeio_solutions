"""
Удаление скобок

средне
решено

Дана строка s, содержащая символы (, ) и буквы латинского алфавита.
Нужно вернуть новую строку, в которой удалено минимальное количество скобок,
чтобы строка стала правильной.
Латинские символы должны остаться на своих местах.

Строка считается правильной, если каждой открывающей скобке соответствует закрывающая скобка,
и нет лишних скобок без пары.

Если существует несколько вариантов удаления скобок, можно вернуть любой из них.

Пример 1:

Ввод: s = "((H)i)()))"
Вывод: "((H)i)()"

Пример 2:

Ввод: s = ")Alg(o)Code("
Вывод: "Alg(o)Code"

Пример 3:

Ввод: s = "Hi"
Вывод: "Hi"


Пример 4:

Ввод: s = "))(("
Вывод: ""

Ограничения:

len(s) >= 1
"""

from typing import *

def makeBalanced(s: str) -> str:
    # в python строки не изменяемы поэтому нужно сделать список из символов
    # который уже можно менять
    s_list = list(s)
    stack = []  # храним индексы для символа (
    for i, char in enumerate(s_list):
        char = s_list[i]
        if char == '(':
            stack.append(i)
        elif char == ')':
            if len(stack) == 0:
            # скобка ")" лишняя и должна быть удалена
                s_list[i] = ''
            else:
                stack.pop()

    # проходимся по всем лишним скобкам "(" и удаляем их
    for i in stack:
        s_list[i] = ""

    # делаем строку из элементов списка
    return "".join(s_list)

if __name__ == "__main__":
    ex1 = "((H)i)()))"
    ex2 = ")Alg(o)Code("
    ex3 = "Hi"
    ex4 = "))(("

    ans1 = makeBalanced(ex1)
    ans2 = makeBalanced(ex2)
    ans3 = makeBalanced(ex3)
    ans4 = makeBalanced(ex4)

    print(ans1)
    print(ans2)
    print(ans3)
    print(ans4)



"""
Оценка сложности

Время: O(n), где n - размер строки s
Память: O(n), где n - размер строки s
"""

