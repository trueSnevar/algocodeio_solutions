"""
Кодирование повторов
средне
решено

Дан массив chars и нужно реализовать алгоритм сжатия строки по следующим правилам:

Подряд идущие одинаковые символы группируются.
Группа включает в себя всегда максимально возможное число одинаковых подряд идущих символов.

Если в группе только одна буква, то пишется только она.

Если в группе более одной буквы, то пишется сначала буква, а потом число раз которое она встретилась.

Если буква встретилась более 9 раз, то каждый символ количества должен быть записан отдельно.

Пример 1:

Ввод: chars = ["x","x","y","z","z","z"]
Вывод: ["x","2","y","z","3"]

Пример 2:

Ввод: chars = ["y","y","x","x","x","x","x","x","x","x","x","x","x","x","y","y"]
Вывод: ["y","2","x","1","2","y","2"]

Пример 3:

Ввод: chars = ["a","b","c"]
Вывод: ["a","b","c"]

Ограничения:

0 <= len(chars)
Значение массива chars может содержать только английские буквы.

"""

from typing import *


def compress(chars: List[str]) -> List[str]:
    l = 0
    r = 0
    result = []
    while l < len(chars):
        # бежим правым указателем пока в интервале [l, r]
        # находятся все одинаковые символы
        while r + 1 < len(chars) and chars[r] == chars[r + 1]:
            r += 1

        # обновляем ответ
        windowSize = r - l + 1
        if windowSize == 1:
            result.append(chars[r])
        else:
            result.append(chars[r])
            result += list(str(windowSize))

        # интервалы не пересекаются, поэтому сдвигаем
        # на r + 1 - именно отсюда будет начинаться
        # следующий интервал
        l = r + 1
        r = r + 1
    return result

if __name__ == "__main__":
    ex1 = ["x","x","y","z","z","z"]
    ex2 = ["y","y","x","x","x","x","x","x","x","x","x","x","x","x","y","y"]
    ex3 = ["a","b","c"]

    ans1 = compress(ex1)
    ans2 = compress(ex2)
    ans3 = compress(ex3)
    print(ans1)
    print(ans2)
    print(ans3)

"""
Оценка сложности

Время: O(n), где n - длина массива chars
Память: O(n), где n - длина массива chars
"""