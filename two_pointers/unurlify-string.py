"""
URL-декодирование строки (in-place)

средне
решено

Дан список s, в котором последовательности "%20" представляют пробелы.

Нужно заменить каждую подстроку "%20" на один пробел ' ' прямо в том же списке s,
а оставшуюся часть списка заполнить символами "#".

Пример 1:

Ввод:
    s = ["h","e","l","l","o","%","2","0","w","o","r","l","d"]
Вывод:
    s изменится на ["h","e","l","l","o"," ","w","o","r","l","d","#","#"]

Пример 2:

Ввод:
    s = ["a","%","2","0","b","%","2","0","%","2","0","c"]
Вывод:
    s изменится на ["a"," ","b"," ", " ", "c","#","#","#","#","#","#"]

Ограничения:
- len(s) ≥ 1
"""
from typing import List


def urldecode_inplace(s: List[str]) -> None:
    """
    Заменяет каждую подстроку '%20' в списке символов s на один пробел ' ',
    изменяя список на месте. Используется два указателя (fast/slow).
    После обработки оставшиеся позиции заполняются символом '#'.
    """
    n = len(s)
    slow = 0  # позиция для записи
    fast = 0  # позиция для чтения

    # 1) Обрабатываем входной список
    while fast < n:
        # обнаруживаем '%20'
        if fast + 2 < n and s[fast] == '%' and s[fast + 1] == '2' and s[fast + 2] == '0':
            s[slow] = ' '
            slow += 1
            fast += 3
        else:
            s[slow] = s[fast]
            slow += 1
            fast += 1

    # 2) Заполняем оставшиеся позиции '#'
    for i in range(slow, n):
        s[i] = '#'

    return s


if __name__ == "__main__":
    # Пример 1
    s1 = ["h","e","l","l","o","%","2","0","w","o","r","l","d"]
    urldecode_inplace(s1)
    print(s1)  # ['h','e','l','l','o',' ','w','o','r','l','d','#','#']

    # Пример 2
    s2 = ["a","%","2","0","b","%","2","0","%","2","0","c"]
    urldecode_inplace(s2)
    print(s2)  # ['a',' ','b',' ',' ','c','#','#','#','#','#','#']

# Оценка сложности:
# Время: O(n), где n = len(s)
# Память: O(1), модификация списка in-place
